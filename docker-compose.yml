version: '3.9'
services:
  redis:
    image: redis:7
    container_name: video-app-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n11562773-ecr-repository:latesta2
    container_name: video-app-api
    depends_on:
      redis:
        condition: service_healthy
      external-api:
        condition: service_healthy
    environment:
      PORT: 3000
      UPLOAD_DIR: /app/uploads
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      TRANSCODING_QUEUE_URL: ${TRANSCODING_QUEUE_URL}
      EXTERNAL_API_URL: http://external-api:3001
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads

  transcoding-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: video-app-transcoding-worker
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      UPLOAD_DIR: /app/uploads
      REDIS_URL: redis://redis:6379
      TRANSCODING_QUEUE_URL: ${TRANSCODING_QUEUE_URL}
      AWS_REGION: ${AWS_REGION}
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    deploy:
      replicas: 2

  external-api:
    build:
      context: .
      dockerfile: Dockerfile.external
    container_name: video-app-external-api
    environment:
      NODE_ENV: production
      PORT: 3001
      VIRUSTOTAL_API_KEY: ${VIRUSTOTAL_API_KEY}
    ports:
      - "3001:3001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
  uploads: